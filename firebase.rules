rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Content collection (for about page and other content)
    match /content/{document} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // Team members collection
    match /team/{member} {
      allow read: if true;
      allow create, update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // Contact submissions collection
    match /contacts/{contact} {
      allow read: if isAdmin();
      allow create: if true;
      allow update, delete: if isAdmin();
    }

    // Portfolio sites collection
    match /portfolio-sites/{siteId} {
      allow read: if resource.data.status == 'published' || isAdmin();
      allow write: if isAdmin();
      
      match /sections/{sectionId} {
        allow read: if get(/databases/$(database)/documents/portfolio-sites/$(siteId)).data.status == 'published' || isAdmin();
        allow write: if isAdmin();
      }

      match /assets/{assetId} {
        allow read: if get(/databases/$(database)/documents/portfolio-sites/$(siteId)).data.status == 'published' || isAdmin();
        allow write: if isAdmin();
      }
    }

    // External portfolio items collection
    match /portfolio-external/{itemId} {
      allow read: if resource.data.published == true || isAdmin();
      allow write: if isAdmin();
    }

    // User profiles collection
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    // Settings collection
    match /settings/{setting} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // AI chat history collection
    match /chat-history/{chatId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // Analytics collection
    match /analytics/{docId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
} 